package tcp;
/*
 * tcp报文
 */
public class TCPMessageAndStatus {
	/*
	 * tcp的报文分为两个部分:数据段头,数据
	 */
	/*
	 * header:
	 * 16:源端口
	 * 16:目的端口
	 * 32:序号(seq):数据部分第一个字节的编号,比如数据段A的seq为101,
	 * 数据长度为100(100个字节),那么下一个数据段的seq为201
	 * 32:确认号(ack):指期望收到的下一数据段的seq
	 * 32~60*8:数据偏移
	 * 6:保留位
	 * 1:紧急指针(URG)
	 * 1:确认控制位(ACK),用于指示ack是否有效
	 * 1:(推)控制位(PSH)
	 * 1:(重置)控制位(RST)
	 * 1:(同步)控制位(SYN),用于在建立连接时,同步传输连接序号
	 * 1:(最终)控制位(FIN),用于释放传输连接
	 * 16:窗口大小
	 * 16:校验和
	 * 16:紧急指针
	 * 0~40*8:可选项
	 */
	
	/*
	 * tcp 状态采用有限状态机(Finite State Machine, FSM)
	 * CLOSED:关闭状态
	 * LISTEN:监听状态
	 * SYN RCVD:同步接收,即已经接收到了连接请求,但尚未确认
	 * SYN SENT:同步发送,即已经发出了连接请求,等待确认
	 * ESTABLISHED:已建立连接
	 * FIN WAIT 1:完成等待1,已发送关闭连接的请求,等待对方确认
	 * FIN WAIT 2:完成等待2,已收到关闭连接确认,等待对方发送关闭连接请求
	 * TIMED WAIT:完成双向连接关闭,等待所有分组消失
	 * CLOSING:正在关闭状态
	 * CLOSE WAITE:(被动关闭)收到对方发来的关闭连接请求,并已确认
	 * LAST ACK:(被动关闭)等待最后一个关闭连接确认
	 */
}
