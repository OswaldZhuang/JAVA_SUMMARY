
select：同步io多路复用

fs/select.c

select和pselect允许程序监控多个文件描述符（file descriptor）
等待直到一个或多个fd变得对io可用

int select(int nfds, fd_set *readfds, fd_set *writefds,
    fd_set *exceptfds, struct timeval *timeout)
int select(int nfds, fd_set *readfds, fd_set *writefds,
    fd_set *exceptfds, const struct timespec *timeout, const sigset_t *sigmask)

select和pselect能够监控的fd有数量限制（FD_SETSIZE）

select和pselect功能是一致的，但是有如下区别：
1.pselect的超时精度更高（pselect为ns，select为ms）
2.select会更新超时参数来表示已经经过了多少时间，pselect不会
3.select没有sigmask参数

三种独立的fd会被监控：
1.readfds，可读
2.writefds，可写
3.exceptfds，异常

timeout参数指定该函数等待fd变为可用的时间

sigmask参数是一个指向一个信号掩码的指针（signal mask）

select和pselect返回fd的数量，-1表示发生错误

pselect更加推荐使用（能够确保线程安全）


